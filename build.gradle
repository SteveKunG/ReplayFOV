plugins {
    id "fabric-loom" version "1.1-SNAPSHOT"
    id "io.github.juuxel.loom-quiltflower" version "1.8.0"
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

loom {
    mixin {
        defaultRefmapName = "mixins.replayfov.refmap.json"
    }

    runs {
        client {
            programArgs "--username", "${username}", "--uuid", "${uuid}"
            property "mixin.debug.export", "true"
            property "mixin.hotSwap", "true"
        }
    }
}

quiltflower {
    preferences {
        // Max line length before formatting
        pll = 32767

        // Indentation string
        ind = "    "
    }
    quiltflowerVersion = "1.9.0"
}

repositories {
    ivy {
        setName("ReplayMod")
        setUrl("https://minio.replaymod.com/replaymod/")
        patternLayout { artifact("[artifact]-[revision](-[classifier])(.[ext])") }
        metadataSources { artifact() }
        content { includeGroup("com.replaymod") }
    }
    maven {
        name "TerraformersMC"
        url "https://maven.terraformersmc.com/releases"
        content {
            includeGroup "com.terraformersmc"
        }
    }
    maven {
        name "ParchmentMC"
        url "https://maven.parchmentmc.org"
        content {
            includeGroup "org.parchmentmc.data"
        }
    }
}

dependencies {
    minecraft "com.mojang:minecraft:${minecraft_version}"
    mappings loom.layered() {
        officialMojangMappings()
        parchment("org.parchmentmc.data:parchment-${parchmentmc_version}@zip")
    }
    modImplementation("com.terraformersmc:modmenu:${mod_menu_version}") {
        exclude group: "net.fabricmc.fabric-api"
        exclude group: "net.fabricmc", module: "fabric-loader"
    }
    modImplementation "net.fabricmc:fabric-loader:${loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${fabric_version}"
    modImplementation "com.replaymod:replaymod-${replay_version}"
    implementation(include("com.ezylang:EvalEx:3.0.4"))
}

String fileName = "${archives_base_name}-mc${supported_mc}"

remapJar {
    archiveVersion = "v${version}"
    archiveBaseName = fileName
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    it.options.release = 17
}